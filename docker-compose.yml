# ============================================================================
# Docker Compose - Mobile-Rust Bulk Picking System
# ============================================================================
# Single-container deployment: Rust backend serves Angular frontend + API
# Usage:
#   docker-compose build          # Build the image
#   docker-compose up -d          # Start service in background
#   docker-compose down           # Stop service
#   docker-compose logs -f        # View logs
#   docker-compose restart        # Restart service
# ============================================================================

services:
  # ==========================================================================
  # Mobile-Rust App (Rust Backend + Angular Frontend)
  # ==========================================================================
  mobile-rust-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: mobile-rust-app:latest
    container_name: mobile-rust-app
    restart: unless-stopped

    # =======================================================================
    # Production Resource Limits (Optimized for 24-core, 64GB server)
    # =======================================================================
    deploy:
      resources:
        limits:
          cpus: '4.0'          # Limit to 4 CPU cores per container
          memory: 2G           # Limit to 2GB RAM per container
        reservations:
          cpus: '2.0'          # Reserve minimum 2 cores
          memory: 1G           # Reserve minimum 1GB
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

    ports:
      - "4400:4400"
    environment:
      # =======================================================================
      # Server Configuration
      # =======================================================================
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=4400
      - RUST_LOG=info
      - RUST_ENV=production

      # =======================================================================
      # Database Configuration (SQL Server TFCPILOT3)
      # =======================================================================
      - DATABASE_SERVER=${DATABASE_SERVER:-192.168.0.86}
      - DATABASE_PORT=${DATABASE_PORT:-49381}
      - DATABASE_NAME=${DATABASE_NAME:-TFCPILOT3}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-dvl}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-Pr0gr@mm1ng}
      - DATABASE_MAX_CONNECTIONS=${DATABASE_MAX_CONNECTIONS:-40}
      - DATABASE_MIN_CONNECTIONS=${DATABASE_MIN_CONNECTIONS:-10}
      - DATABASE_CONNECTION_TIMEOUT_SECS=${DATABASE_CONNECTION_TIMEOUT_SECS:-10}

      # =======================================================================
      # LDAP/Authentication Configuration
      # =======================================================================
      - LDAP_URL=${LDAP_URL:-ldap://192.168.0.1}
      - LDAP_BASE_DN=${LDAP_BASE_DN:-DC=NWFTH,DC=com}
      - LDAP_ENABLED=${LDAP_ENABLED:-true}

      # =======================================================================
      # JWT Configuration
      # =======================================================================
      - JWT_SECRET=${JWT_SECRET:-CHANGE_THIS_IN_PRODUCTION_PLEASE}
      - JWT_DURATION_HOURS=${JWT_DURATION_HOURS:-168}

      # =======================================================================
      # CORS Configuration
      # =======================================================================
      # Allow access from server IP and localhost
      - CORS_ORIGINS=http://192.168.0.10:4400,http://localhost:4400

      # =======================================================================
      # Application Info
      # =======================================================================
      - APP_NAME=Mobile-Rust Bulk Picking System
      - APP_VERSION=1.0.0
      - COMPANY_NAME=Newly Weds Foods Thailand

    volumes:
      # Mount logs directory for persistence
      - ./backend/logs:/app/logs

    # Optional: Mount .env file if you prefer file-based config
    # Uncomment the line below and create a .env file
    # - ./.env:/app/.env:ro

    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4400/api/health"]
      interval: 30s
      timeout: 3s
      start_period: 10s
      retries: 3

# ============================================================================
# Networks (optional - using default bridge network)
# ============================================================================
# networks:
#   app-network:
#     driver: bridge

# ============================================================================
# Notes
# ============================================================================
# - Frontend accessible at: http://192.168.0.10:4400
# - Backend API accessible at: http://192.168.0.10:4400/api
# - Single port 4400 matches Windows start_server.bat deployment
# - Rust backend (tower-http) serves static files from /app/frontend/dist/frontend/browser
# - Database and LDAP are external services (not containerized)
# - Login credentials (from CLAUDE.md): deachawat / Wind@password9937
